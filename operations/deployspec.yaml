version: 0.2
# env:
#   #variables:
#   secrets-manager:
#     DOCKERHUB_USERNAME: '$DOCKER_PULL_SECRETS_MANAGER'
#     DOCKERHUB_PASSWORD: '$DOCKER_PULL_SECRETS_MANAGER' 

phases:
  install:
    runtime-versions:
      python: 3.8
    commands:
      - printenv
      - echo "Performing manual install of compose cli"
      - curl -L -o docker-linux-amd64.tar.gz https://github.com/docker/compose-cli/releases/download/v1.0.10/docker-linux-amd64.tar.gz
      - tar xzf docker-linux-amd64.tar.gz
      - chmod +x docker/docker
      - ls -ltr
      - docker/docker compose --help
      - which docker
      - ln -s $(which docker) /usr/local/bin/com.docker.cli
      - docker version
      # - mv docker/docker $(which docker)
      # - docker version
  pre_build:
    commands:
      - echo Logging in to Docker Hub...
      - docker login --username $DOCKERHUB_USERNAME --password $DOCKERHUB_PASSWORD
      - STS_RESPONSE=$(aws sts get-session-token --duration-seconds 900)
      - AWS_ACCESS_KEY_ID=$(echo $STS_RESPONSE | jq .Credentials.AccessKeyId)
      - AWS_SECRET_ACCESS_KEY=$(echo $STS_RESPONSE | jq .Credentials.SecretAccessKey)
      - AWS_SESSION_TOKEN=$(echo $STS_RESPONSE | jq .Credentials.SessionToken)
      - echo "Create Docker ECS context"
      - docker/docker context create ecs ecs-workshop --from-env
      - echo "Change context to use ECS context"
      - docker/docker context use ecs-workshop

  build:
    commands:
      - DOCKER_HUB_ID=${DOCKERHUB_USERNAME} DOCKER_PULL_SECRETS_MANAGER=${DOCKER_PULL_SECRETS_MANAGER} docker/docker compose -f docker-compose.yaml -f  docker-compose.prod.migrate.yaml -p ${PROJECT_NAME} up
  
  post_build:
    commands:
      - echo "deploy successful"