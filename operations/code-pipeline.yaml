AWSTemplateFormatVersion: "2010-09-09"
Description: This template will launch the CI/CD Pipeline for the Docker-AWS Workshop.

Parameters:
  GitHubOwner:
    Type: String
    AllowedPattern: '[A-Za-z0-9-]+'
    Default: parkand1
  GitHubRepository:
    Type: String
    AllowedPattern: '[A-Za-z0-9-]+'
  GitHubBranch:
    Type: String
    AllowedPattern: '[A-Za-z0-9-]+'
    Default: main
  CodeBuildEnvironmentImage:
    Type: String
    Default: 'aws/codebuild/standard:5.0'
  

Resources:
  CodeBuildServiceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: 
                - codebuild.amazonaws.com
            Action: 
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: Route53Permissions
                Effect: Allow
                Action:
                - 'route53:CreateHostedZone'
                - 'route53:DeleteHostedZone'
                - 'route53:GetHealthCheck'
                - 'route53:GetHostedZone'
                - 'route53:ListHostedZonesByName'
                Resource:
                  - '*'
              - Sid: IAMRolePermissions
                Effect: Allow
                Action:
                - 'iam:AttachRolePolicy'
                - 'iam:CreateRole'
                - 'iam:DeleteRole'
                - 'iam:DetachRolePolicy'
                - 'iam:PassRole'
                Resource: 
                  - '*'
              - Sid: CloudWatchLogsPolicy
                Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                  - 'logs:DescribeLogGroup'
                  - 'logs:FilterLogEvents'
                  - 'logs:DeleteLogGroup'
                Resource:
                  - '*'
              - Sid: S3GetObjectPolicy
                Effect: Allow
                Action:
                  - 's3:GetObject'
                  - 's3:GetObjectVersion'
                Resource:
                  - '*'
              - Sid: S3PutObjectPolicy
                Effect: Allow
                Action:
                  - 's3:PutObject'
                Resource:
                  - '*'
              - Sid: S3BucketIdentity
                Effect: Allow
                Action:
                  - 's3:GetBucketAcl'
                  - 's3:GetBucketLocation'
                Resource:
                  - '*'
              - Sid: EC2SecurityGroup
                Effect: Allow
                Action:
                - 'ec2:RevokeSecurityGroupIngress'
                - 'ec2:AuthorizeSecurityGroupIngress'
                - 'ec2:CreateSecurityGroup'
                - 'ec2:DeleteSecurityGroup'
                Resource:
                  - '*'
              - Sid: EC2DescribeResources
                Effect: Allow
                Action:
                - 'ec2:DescribeVpcs'
                - 'ec2:DescribeSubnets'
                - 'ec2:DescribeRouteTables'
                - 'ec2:DescribeSecurityGroups'
                Resource:
                  - '*'
              - Sid: EC2CreateTags
                Effect: Allow
                Action:
                - 'ec2:CreateTags'
                Resource: 
                  - "*"
              - Sid: ECSClusterPermissions
                Effect: Allow
                Action: 
                - 'ecs:CreateCluster'
                - 'ecs:CreateService'
                - 'ecs:DeleteCluster'
                - 'ecs:DescribeClusters' 
                Resource:
                  - '*'
              - Sid: ECSServicePermissions
                Effect: Allow
                Action:
                - 'ecs:DeleteService'
                - 'ecs:DescribeServices'
                - 'ecs:UpdateService'
                Resource:
                  - '*'
              - Sid: ECSTaskPermissions
                Effect: Allow 
                Action:
                - 'ecs:DescribeTasks'
                - 'ecs:ListTasks'
                - 'ecs:RegisterTaskDefinition'
                - 'ecs:DeregisterTaskDefinition'
                Resource:
                  - '*'
              - Sid: ECSAccountPermissions
                Effect: Allow
                Action:
                - 'ecs:ListAccountSettings'
                Resource:
                  - '*'
              - Sid: CloudFormationPermissions
                Effect: Allow
                Action:
                - 'cloudformation:*'
                Resource:
                  - '*'
              - Sid: ELBAccess
                Effect: Allow
                Action:
                - 'elasticloadbalancing:*'
                Resource:
                  - '*'
              - Sid: ServiceDiscoveryAccess
                Effect: Allow
                Action:
                - 'servicediscovery:*'
                Resource:
                  - '*'
              - Sid: AutoscaleAccess
                Effect: Allow
                Action: 
                - 'application-autoscaling:*'
                Resource:
                  - '*'
              - Sid: RDSAccess
                Effect: Allow
                Action:
                - 'rds:*'
                Resource:
                  - '*'
  
  CodePipelineServiceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: 
                - codepipeline.amazonaws.com
            Action: 
              - sts:AssumeRole
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: CloudWatchLogsPolicy
                Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource:
                  - '*'
              - Sid: S3GetObjectPolicy
                Effect: Allow
                Action:
                  - 's3:GetObject'
                  - 's3:GetObjectVersion'
                Resource:
                  - '*'
              - Sid: S3PutObjectPolicy
                Effect: Allow
                Action:
                  - 's3:PutObject'
                Resource:
                  - '*'
              - Sid: S3BucketIdentity
                Effect: Allow
                Action:
                  - 's3:GetBucketAcl'
                  - 's3:GetBucketLocation'
                Resource:
                  - '*'
              - Sid: CodeBuildPolicy
                Action:
                  - 'codebuild:BatchGetBuilds'
                  - 'codebuild:StartBuild'
                Resource: '*'
                Effect: Allow

  ArtifactBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete 

  CodeBuildSourceCredential:
    Type: 'AWS::CodeBuild::SourceCredential'
    Properties:
      AuthType: PERSONAL_ACCESS_TOKEN
      ServerType: GITHUB
      Token: >-
        {{resolve:secretsmanager:github-oauth-token:SecretString:GITHUB_ACCESS_TOKEN}}

  CodeBuildProject:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Name: !Ref 'AWS::StackName'
      ServiceRole: !GetAtt 
        - CodeBuildServiceRole
        - Arn
      Source:
        Type: GITHUB
        Location: !Sub 'https://github.com/${GitHubOwner}/${GitHubRepository}.git'
        BuildSpec: buildspec.yaml
        Auth:
          Type: OAUTH
          Resource: !Ref CodeBuildSourceCredential
      Artifacts:
        Type: NO_ARTIFACTS
      Triggers:
        Webhook: true
        FilterGroups:
          - - Type: EVENT
              Pattern: >-
                PULL_REQUEST_CREATED, PULL_REQUEST_UPDATED,
                PULL_REQUEST_REOPENED, PULL_REQUEST_MERGED,
            - Type: BASE_REF
              Pattern: !Sub '^refs/heads/${GitHubBranch}$'
          - - Type: EVENT
              Pattern: >-
                PUSH
            - Type: HEAD_REF
              Pattern: '^refs/tags/.*'
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: !Ref CodeBuildEnvironmentImage 

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: docker-pipeline
      RoleArn: !GetAtt 
        - CodePipelineServiceRole
        - Arn
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactBucket
      Stages: 
        - Name: Source 
          Actions: 
            - Name: Source 
              ActionTypeId:
                Category: Source 
                Owner: ThirdParty
                Version: '1'
                Provider: GitHub 
              Configuration:
                Owner: !Ref GitHubOwner
                Repo: !Ref GitHubRepository
                Branch: main
                PollForSourceChanges: false
                OAuthToken: '{{resolve:secretsmanager:github-oauth-token:SecretString:GITHUB_ACCESS_TOKEN}}'
              OutputArtifacts:
                - Name: SourceCode
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: '1'
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref CodeBuildProject
              InputArtifacts:
                - Name: SourceCode
              OutputArtifacts:
                - Name: BuildOutput
              RunOrder: 1
  
  CodePipelineWebhook:
    Type: 'AWS::CodePipeline::Webhook'
    Properties:
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration:
        SecretToken: >-
          {{resolve:secretsmanager:github-oauth-token:SecretString:GITHUB_ACCESS_TOKEN}}
      RegisterWithThirdParty: true
      Filters:
        - JsonPath: $.ref
          MatchEquals: 'refs/heads/{Branch}'
        - JsonPath: $.repository.name
          MatchEquals: '{Repo}'
      TargetPipeline: !Ref Pipeline 
      TargetAction: Source
      TargetPipelineVersion: !GetAtt Pipeline.Version


Outputs:
  PipelineUrl:
    Value: !Sub https://console.aws.amazon.com/codepipeline/home?region=${AWS::Region}#/view/${Pipeline}