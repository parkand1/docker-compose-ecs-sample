version: 0.2
env:
  #variables:
  secrets-manager:
    DOCKERHUB_USERNAME: '$DOCKER_PULL_SECRETS_MANAGER'
    DOCKERHUB_PASSWORD: '$DOCKER_PULL_SECRETS_MANAGER' 

phases:
  install:
    runtime-versions:
      python: 3.8
    commands:
      - echo "Performing manual install of compose cli"
      - curl -L https://github.com/docker/compose-cli/releases/download/v1.0.10/docker-linux-amd64.tar.gz
      - tar xzf docker-linux-amd64.tar.gz
      - echo $PATH
      - which docker
      - ln -s /usr/bin/docker /usr/local/bin/com.docker.cli
      - mv docker/docker /usr/local/bin/docker
      - which docker
      - docker version
      # - echo "Starting the installation of compose CLI in GO"
      # - curl -L https://raw.githubusercontent.com/docker/compose-cli/main/scripts/install/install_linux.sh | sh
      # - docker compose --help
  pre_build:
    commands:
      - echo Logging in to Docker Hub...
      - docker --version 
      - docker compose --version 
      - echo $DOCKERHUB_PASSWORD | docker login --username $DOCKERHUB_USERNAME --password-stdin
      - echo "Create Docker ECS context"
      - docker context create ecs ecs-workshop 
      - echo "Change context to use ECS context"
      - docker context use ecs-workshop

  build:
    commands:
      - echo Build started on `date`
      - DOCKER_HUB_ID=${DOCKER_HUB_ID} DOCKER_PULL_SECRETS_MANAGER=${DOCKER_PULL_SECRETS_MANAGER} RDS_ENDPOINT=${RDS_ENDPOINT} RDS_DB_SECRET_ARN=${RDS_DB_SECRET_ARN} docker compose -f docker-compose.yaml -f  docker-compose.prod.migrate.yaml -f docker-compose.prod.scaling.yaml -f docker-compose.prod.rds.yaml up
      - echo "Tagging Docker image for Docker Hub"
      - docker tag "insert image name here" ${DOCKER_HUB_REPO}:${CODEBUILD_SOURCE_VERSION}
  

  post_build:
    commands:
      - echo "build successful"